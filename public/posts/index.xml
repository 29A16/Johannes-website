<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on JR</title>
    <link>https://example.org/posts/</link>
    <description>Recent content in Posts on JR</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 04 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://example.org/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Setting up this site</title>
      <link>https://example.org/posts/set-up-website/</link>
      <pubDate>Tue, 04 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://example.org/posts/set-up-website/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=dnE7c0ELEH8&#34;&gt;source&lt;/a&gt;/&lt;a href=&#34;https://blog.networkchuck.com/posts/my-insane-blog-pipeline/&#34;&gt;or&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use a Hugo theme and customize it&lt;/li&gt;&#xA;&lt;li&gt;Script below to add the images from .md to the static dir&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Windows (updated)&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-Copy&#34; data-lang=&#34;Copy&#34;&gt;import os&#xD;&#xA;import re&#xD;&#xA;import shutil&#xD;&#xA;&#xD;&#xA;# Paths&#xD;&#xA;posts_dir = r&amp;#34;E:\Documents\scratch\themes\nostyleplease\content&amp;#34;&#xD;&#xA;attachments_dir = r&amp;#34;E:\Documents\Obsidian\Merged\Attachments&amp;#34;&#xD;&#xA;static_images_dir = r&amp;#34;E:\Documents\scratch\static\images&amp;#34;  &#xD;&#xA;&#xD;&#xA;# Regex pattern to find image references in the format ![[some/path/image.png]]&#xD;&#xA;image_pattern = re.compile(r&amp;#39;!\[\[([^]]*\.png)\]\]&amp;#39;)&#xD;&#xA;&#xD;&#xA;# Step 1: Process each markdown file in the posts directory and subdirectories&#xD;&#xA;for root, _, files in os.walk(posts_dir):&#xD;&#xA;    for filename in files:&#xD;&#xA;        if filename.endswith(&amp;#34;.md&amp;#34;):&#xD;&#xA;            filepath = os.path.join(root, filename)&#xD;&#xA;            with open(filepath, &amp;#34;r&amp;#34;, encoding=&amp;#34;utf-8&amp;#34;) as file:&#xD;&#xA;                content = file.read()&#xD;&#xA;            # Step 2: Find all image links&#xD;&#xA;            images = image_pattern.findall(content)&#xD;&#xA;            # Step 3: Process each found image&#xD;&#xA;            for image_rel_path in images:&#xD;&#xA;                image_source = os.path.join(attachments_dir, image_rel_path)  # Full path in attachments&#xD;&#xA;                image_name = os.path.basename(image_source)  # Extract only filename&#xD;&#xA;                image_dest = os.path.join(static_images_dir, image_name)&#xD;&#xA;  &#xD;&#xA;                # Step 4: Copy the image if it exists&#xD;&#xA;                if os.path.exists(image_source):&#xD;&#xA;                    shutil.copy(image_source, image_dest)&#xD;&#xA;                    print(f&amp;#34;Copied: {image_source} -&amp;gt; {image_dest}&amp;#34;) &#xD;&#xA;&#xD;&#xA;                    # Step 5: Replace the old link in Markdown with the new format&#xD;&#xA;                    markdown_image = f&amp;#34;![Image Description](/images/{image_name.replace(&amp;#39; &amp;#39;, &amp;#39;%20&amp;#39;)})&amp;#34;&#xD;&#xA;                    content = content.replace(f&amp;#34;[[{image_rel_path}]]&amp;#34;, markdown_image)&#xD;&#xA;                else:&#xD;&#xA;                    print(f&amp;#34;Warning: {image_source} not found&amp;#34;)&#xD;&#xA;&#xD;&#xA;            # Step 6: Write the updated content back to the markdown file&#xD;&#xA;            with open(filepath, &amp;#34;w&amp;#34;, encoding=&amp;#34;utf-8&amp;#34;) as file:&#xD;&#xA;                file.write(content) &#xD;&#xA;&#xD;&#xA;print(&amp;#34;Markdown files processed and images copied successfully.&amp;#34;)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Linux&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
